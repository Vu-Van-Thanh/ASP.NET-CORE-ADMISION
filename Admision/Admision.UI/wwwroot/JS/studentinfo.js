let selectedFilesCCCD = []; // M·∫£ng cho khung ch·ª©a 1
let selectedFilesBHYT = []; // M·∫£ng cho khung ch·ª©a 2
let selectedFilesHB = []; // M·∫£ng cho khung ch·ª©a 3
let selectedFilesHK = []; // M·∫£ng cho khung ch·ª©a 4

function previewImages(event, previewContainerId, selectedFiles) {
    const files = event.target.files; // L·∫•y c√°c file ƒë√£ ch·ªçn
    const imagePreview = document.getElementById(previewContainerId); // S·ª≠ d·ª•ng ID ƒë·ªÉ ch·ªçn

    Array.from(files).forEach(file => {
        if (!selectedFiles.some(f => f.name === file.name)) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const imgItem = document.createElement('div');
                imgItem.classList.add('image-item');
                
                imgItem.innerHTML = `
                    <img src="${e.target.result}" alt="Selected Image" class="image" width="100" height="100">
                    <div class="icon-container">
                        <span class="icon zoom" onclick="openModal(event,'${e.target.result}')">üîç</span>
                        <span class="icon delete" onclick="removeImage('${file.name}', this, '${previewContainerId}')"><i class="fas fa-trash"></i></span>
                    </div>
                `;
                imagePreview.appendChild(imgItem);
                selectedFiles.push(file); // Th√™m file v√†o m·∫£ng
            };
            reader.readAsDataURL(file);
        }
    });
}

function openModal(event,imgSrc) {
    event.stopPropagation(); // NgƒÉn ch·∫∑n s·ª± ki·ªán click lan ra b√™n ngo√†i
    const modal = document.getElementById("imageModal"); // S·ª≠ d·ª•ng ID cho modal
    const modalImg = document.getElementById("modalImage"); // S·ª≠ d·ª•ng ID cho h√¨nh ·∫£nh trong modal
    modal.style.display = "flex"; // S·ª≠ d·ª•ng flex ƒë·ªÉ cƒÉn gi·ªØa
    modalImg.src = imgSrc; // G√°n src cho ·∫£nh trong modal

    // ƒê√≥ng modal khi click v√†o modal
    modal.onclick = function() {
        modal.style.display = "none";
    };
}

function removeImage(fileName, element, previewContainerId) {
    const imageItem = element.closest('.image-item');
    if (imageItem) {
        imageItem.remove(); // X√≥a ·∫£nh kh·ªèi khung ch·ª©a
        
        // C·∫≠p nh·∫≠t m·∫£ng, lo·∫°i b·ªè ·∫£nh ƒë√£ x√≥a
        if (previewContainerId === 'imagePreviewCCCD') {
            selectedFilesCCCD = selectedFilesCCCD.filter(f => f.name !== fileName);
        } else if (previewContainerId === 'imagePreviewBHYT') {
            selectedFilesBHYT = selectedFilesBHYT.filter(f => f.name !== fileName);
        } else if (previewContainerId === 'imagePreviewHB') {
            selectedFilesBHYT = selectedFilesBHYT.filter(f => f.name !== fileName);
        } else if (previewContainerId === 'imagePreviewHK') {
            selectedFilesHK = selectedFilesHK.filter(f => f.name !== fileName);
        }
    }
}


function chooseImage(selector) {
    let input = document.createElement("input");
    input.type = "file";
    input.accept = "image/*";
    input.onchange = function (event) {
        let file = event.target.files[0];
        if (file) {
            let reader = new FileReader();
            reader.onload = function (e) {
                const imgElement = document.querySelector(selector);
                imgElement.src = e.target.result; // Thay th·∫ø src c·ªßa img

                if (imgElement.classList.contains('iv')) {
                    imgElement.style.display = 'block'; // Hi·ªán ·∫£nh
                    imgElement.nextElementSibling.style.display = 'none'; // ·∫®n d·∫•u +
                    imgElement.parentElement.querySelector('.remove-button').style.display = 'block'; // Hi·ªán n√∫t x√≥a
                    imgElement.parentElement.querySelector('.zoom-icon').style.display = 'block'; // Hi·ªán n√∫t k√≠nh l√∫p
                }
            };
            reader.readAsDataURL(file);
        }
    };
    input.click(); // K√≠ch ho·∫°t ch·ªçn file
}

function removeImageAvatar(event,selector) {
    event.stopPropagation();
    const imgElement = document.querySelector(selector);
    const plusSign = imgElement.nextElementSibling; // D·∫•u +
    const removeButton = imgElement.parentElement.querySelector('.remove-button'); // N√∫t x√≥a
    const zoomButton = imgElement.parentElement.querySelector('.zoom-icon'); // N√∫t x√≥a
    imgElement.src = ""; // X√≥a ·∫£nh
    if (imgElement.classList.contains('iv')) {
        
        imgElement.style.display = 'none'; // ·∫®n ·∫£nh
        plusSign.style.display = 'block'; // Hi·ªán d·∫•u +
        removeButton.style.display = 'none'; // ·∫®n n√∫t x√≥a
        zoomButton.style.display = 'none'; // ·∫®n n√∫t x√≥a
    }
}


// H√†m x·ª≠ l√Ω s·ª± ki·ªán cho n√∫t ch·ªânh s·ª≠a v√† l∆∞u
function setupEditAndSaveEvents(icon) {
    icon.addEventListener('click', (event) => {
        const row = event.target.closest('tr');
        const cells = row.querySelectorAll('.editable');

        if (event.target.classList.contains('fa-edit')) {
            // ƒê·ªïi t·ª´ ch·∫ø ƒë·ªô xem sang ch·∫ø ƒë·ªô ch·ªânh s·ª≠a
            cells.forEach((cell) => {
                const input = document.createElement('input');
                input.type = 'text';
                input.value = cell.textContent;
                cell.textContent = ''; // X√≥a n·ªôi dung hi·ªán t·∫°i
                cell.appendChild(input); // Th√™m input v√†o √¥
            });

            // Thay ƒë·ªïi bi·ªÉu t∆∞·ª£ng ch·ªânh s·ª≠a th√†nh l∆∞u
            event.target.classList.remove('fa-edit');
            event.target.classList.add('fa-save');
            event.target.setAttribute('title', 'L∆∞u');
        } else if (event.target.classList.contains('fa-save')) {
            // ƒê·ªïi t·ª´ ch·∫ø ƒë·ªô ch·ªânh s·ª≠a sang ch·∫ø ƒë·ªô xem
            cells.forEach((cell) => {
                const input = cell.querySelector('input');
                if (input) {
                    cell.textContent = input.value; // C·∫≠p nh·∫≠t n·ªôi dung √¥
                }
            });

            // ƒê·ªïi l·∫°i bi·ªÉu t∆∞·ª£ng v·ªÅ ch·ªânh s·ª≠a
            event.target.classList.remove('fa-save');
            event.target.classList.add('fa-edit');
            event.target.setAttribute('title', 'Ch·ªânh s·ª≠a');
        }
    });
}

// X·ª≠ l√Ω b·∫£ng
document.getElementById('add-relation').addEventListener('click', () => {
    const relation = document.getElementById('Relation').value;
    const name = document.getElementById('FullNameRelation').value;
    const birthYear = document.getElementById('DateOfBirthRelation').value;
    const occupation = document.getElementById('Occupation').value;
    const workplace = document.getElementById('Workplace').value;

    if (!relation || !name || !birthYear || !occupation || !workplace) {
        alert('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin tr∆∞·ªõc khi th√™m.');
        return;
    }

    const table = document.getElementById('infoTable').querySelector('tbody');
    const newRow = document.createElement('tr');

    newRow.innerHTML = `
        <td class="editable">${relation}</td>
        <td class="editable">${name}</td>
        <td class="editable">${birthYear}</td>
        <td class="editable">${occupation}</td>
        <td class="editable">${workplace}</td>
        <td class="action-icons">
            <i class="fas fa-edit" title="Ch·ªânh s·ª≠a"></i>
            <i class="fas fa-trash" title="X√≥a"></i>
        </td>
    `;

    // Th√™m s·ª± ki·ªán cho n√∫t x√≥a
    newRow.querySelector('.fa-trash').addEventListener('click', (event) => {
        if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a kh√¥ng?')) {
            event.target.closest('tr').remove();
        }
    });

    // Th√™m s·ª± ki·ªán ch·ªânh s·ª≠a cho n√∫t ch·ªânh s·ª≠a
    const editIcon = newRow.querySelector('.fa-edit');
    setupEditAndSaveEvents(editIcon); // G·ªçi h√†m thi·∫øt l·∫≠p s·ª± ki·ªán cho bi·ªÉu t∆∞·ª£ng ch·ªânh s·ª≠a

    table.appendChild(newRow);

    // X√≥a n·ªôi dung c·ªßa c√°c tr∆∞·ªùng ƒë·∫ßu v√†o sau khi th√™m v√†o b·∫£ng
    document.getElementById('Relation').value = '';
    document.getElementById('FullNameRelation').value = '';
    document.getElementById('DateOfBirthRelation').value = '';
    document.getElementById('Occupation').value = '';
    document.getElementById('Workplace').value = '';
});

// Thi·∫øt l·∫≠p s·ª± ki·ªán cho c√°c bi·ªÉu t∆∞·ª£ng ch·ªânh s·ª≠a hi·ªán c√≥ (n·∫øu c√≥)
document.querySelectorAll('.fa-edit').forEach(setupEditAndSaveEvents);


// X·ª≠ l√Ω s·ª± ki·ªán cho n√∫t x√≥a ch·ªâ trong b·∫£ng infoTable
document.querySelectorAll('#infoTable .fa-trash').forEach(icon => {
    icon.addEventListener('click', (event) => {
        if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a kh√¥ng?')) {
            const row = event.target.closest('tr');
            row.remove(); // X√≥a h√†ng
        }
    });
});
